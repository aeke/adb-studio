name: Build and Release ADB Studio

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build Release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare dist folder
        run: mkdir -p dist

      - name: Package macOS .app bundle and DMG
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          APP_NAME="ADB Studio"
          ICON_SRC="assets/appicon.png"
          APP_BUNDLE="dist/$APP_NAME.app"
          DMG_PATH="dist/$APP_NAME.dmg"

          mkdir -p "$APP_BUNDLE/Contents/MacOS"
          mkdir -p "$APP_BUNDLE/Contents/Resources"

          cp target/${{ matrix.target }}/release/adb_studio-ui "$APP_BUNDLE/Contents/MacOS/$APP_NAME"
          cp "$ICON_SRC" "$APP_BUNDLE/Contents/Resources/AppIcon.png"

          cat > "$APP_BUNDLE/Contents/Info.plist" <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>
            <string>$APP_NAME</string>
            <key>CFBundleDisplayName</key>
            <string>$APP_NAME</string>
            <key>CFBundleExecutable</key>
            <string>$APP_NAME</string>
            <key>CFBundleIconFile</key>
            <string>AppIcon.png</string>
            <key>CFBundleIdentifier</key>
            <string>com.adbstudio.app</string>
            <key>CFBundleVersion</key>
            <string>${GITHUB_REF_NAME}</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
          </dict>
          </plist>
          EOF

          codesign --force --deep --sign - "$APP_BUNDLE/Contents/MacOS/$APP_NAME"
          xattr -dr com.apple.quarantine "$APP_BUNDLE"

          DMG_TEMP="dist/dmg_temp"
          mkdir -p "$DMG_TEMP"
          cp -R "$APP_BUNDLE" "$DMG_TEMP/"
          ln -s /Applications "$DMG_TEMP/Applications"

          echo '
            tell application "Finder"
              tell disk "'$APP_NAME'"
                open
                set current view of container window to icon view
                set toolbar visible of container window to false
                set statusbar visible of container window to false
                set the bounds of container window to {100, 100, 680, 400}
                set theViewOptions to the icon view options of container window
                set arrangement of theViewOptions to not arranged
                set icon size of theViewOptions to 100
                set position of item "'$APP_NAME'.app" of container window to {140, 150}
                set position of item "Applications" of container window to {400, 150}
                update without registering applications
                delay 1
                close
              end tell
            end tell
          ' > dist/dmg_setup.applescript

          hdiutil create -volname "$APP_NAME" -srcfolder "$DMG_TEMP" -ov -format UDZO "$DMG_PATH"
          hdiutil attach "$DMG_PATH" -mountpoint /Volumes/"$APP_NAME"
          osascript dist/dmg_setup.applescript || true
          hdiutil detach /Volumes/"$APP_NAME"

          rm -rf "$DMG_TEMP" dist/dmg_setup.applescript
          echo "✅ DMG created: $DMG_PATH"

      - name: Package Windows EXE
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $exePath = "target\${{ matrix.target }}\release\adb_studio-ui.exe"
          $distExe = "dist\ADB Studio.exe"
          Copy-Item $exePath $distExe
          Write-Host "✅ Windows EXE created at $distExe"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ADB_Studio_${{ matrix.os }}
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/ADB Studio.dmg
            dist/**/ADB Studio.exe
          tag_name: ${{ github.ref_name }}
          name: "ADB Studio ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
