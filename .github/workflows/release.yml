name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Update Cargo.lock
        run: cargo update

      - name: Build release
        run: cargo build --release

      - name: Package binary
        shell: bash
        run: |
          mkdir -p dist
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            hdiutil create "dist/adb_studio_${{ env.VERSION }}_mac.dmg" \
              -srcfolder target/release/adb_studio-ui \
              -ov -format UDZO
          else
            powershell Compress-Archive -Path target/release/adb_studio-ui.exe -DestinationPath "dist/adb_studio_${{ env.VERSION }}_windows.zip"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: adb_studio_${{ env.VERSION }}_${{ runner.os }}
          path: dist/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
